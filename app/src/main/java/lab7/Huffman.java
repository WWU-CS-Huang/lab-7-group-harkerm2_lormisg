/*
 * This source file was generated by the Gradle 'init' task
 */
package lab7;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Hashtable;
import java.util.Scanner;

public class Huffman {

    static Hashtable<Integer, Integer> map = new Hashtable<>();
    public static void main(String[] args) { // Change to execute the given methods below

        map = new Hashtable<>();
        String filename = args[0];
        try {
            Scanner scanner = new Scanner(new File(filename));
        } catch (FileNotFoundException e) {
            System.out.print(e);
        }
        
    }

    /**
     * methods:
     * Count Frequency
     * Build the tree based on count frequency
     * {Decoder
     * Encoder} - Based on huff.
     * 
     */

    public static void countFrequency (Scanner scan){
        while (scan.hasNextLine()){
            String a = scan.nextLine();

            for (int i = 0; i < a.length(); i++){
                int ascii = (int) a.charAt(i);
                if (map.containsKey(ascii) != true){ // if key not present, add and can assume first instance
                    map.put(ascii, 1);
                    continue;
                }
                int curVal = map.get(ascii);
                map.put(ascii, curVal + 1);
            }
        }
        System.out.println(map.toString());
    }
}
